[tox]
envlist =
  precommit,
  py{27,35,36,37,38},
  doctest,
  coverage,
  flake8,
  bandit,
  importlint,
  mkdocs,
  remarklint,
  eslint,
  yamllint,
  jscpd,
  commitlint
isolated_build = true

[testenv:precommit]
basepython = python3.8
skip_install = true
deps =
  pre-commit
commands =
  pre-commit autoupdate
  pre-commit run {posargs:--all-files}
commands_post =
  sed -i 's/rev: .*$/rev: ""/g' .pre-commit-config.yaml
  git --no-pager diff --color
whitelist_externals =
  git
  sed
depends =

[testenv]
deps =
  coverage
  pytest
  pytest-randomly
  pytest-timeout
  PyYAML
  tomlkit
commands =
  pip install ./tests/helpers/.
  coverage run -m pytest {env:CI_PYTEST_FLAGS:} {posargs}
depends =
  precommit

[testenv:doctest]
basepython = python3.8
deps =
  attrs
  coverage
  requests
  responses
commands =
  pip install ./tests/helpers/.
  coverage run -m mddoctest

[testenv:coverage]
basepython = python3.8
skip_install = true
deps =
  coverage
commands =
  coverage combine
  coverage report --fail-under 99
depends =
  py{27,35,36,37,38},
  doctest

[testenv:flake8]
basepython = python3.8
skip_install = true
deps =
  flake8
  flake8-2020
  flake8-blind-except
  flake8-bugbear
  flake8-builtins
  flake8-coding
  flake8-comprehensions
  flake8-eradicate
  flake8-executable
  flake8-fixme
  flake8-mutable
  flake8-print
  flake8-pytest
  flake8-pytest-style
  flake8-tidy-imports
commands =
  flake8 -j auto

[testenv:bandit]
basepython = python3.8
skip_install = true
deps =
  bandit
commands =
  bandit -r src/

[testenv:importlint]
basepython = python3.8
deps =
  import-linter
commands =
  lint-imports

[testenv:mkdocs]
basepython = python3.8
skip_install = true
deps =
  mkdocs
  mkdocs-material
commands =
  mkdocs {posargs:build}

[testenv:remarklint]
basepython = python3.8
skip_install = true
install_command = npm install --no-save --no-package-lock {packages}
deps =
  remark-cli
  remark-lint
  remark-preset-lint-recommended
commands =
  npx remark --frail .
whitelist_externals =
  npm
  npx

[testenv:eslint]
basepython = python3.8
skip_install = true
install_command = npm install --no-save --no-package-lock {packages}
deps =
  eslint
  eslint-plugin-json
commands =
  npx eslint --ext .js,.json --ignore-path .gitignore .
whitelist_externals =
  npm
  npx

[testenv:yamllint]
basepython = python3.8
skip_install = true
deps =
  yamllint
commands =
  yamllint --strict .

[testenv:jscpd]
basepython = python3.8
skip_install = true
install_command = npm install --no-save --no-package-lock {packages}
deps =
  jscpd
commands =
  npx jscpd src/
whitelist_externals =
  npm
  npx

[testenv:commitlint]
basepython = python3.8
skip_install = true
install_command = npm install --no-save --no-package-lock {packages}
deps =
  @commitlint/cli
  @commitlint/config-conventional
commands =
  npx commitlint --from master
whitelist_externals =
  npm
  npx
