---
trigger:
  - release
  - develop
variables:
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    source_branch_name: $(System.PullRequest.SourceBranch)
    should_review: true
    should_deploy: false
  ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}:
    source_branch_name: $(Build.SourceBranchName)
    should_review: false
    should_deploy: true
jobs:
  - job: "Test"
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: Install Python 3.8.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
        displayName: Install Python 3.9.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.10"
        displayName: Install Python 3.10.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: pypy3
        displayName: Install PyPy.
      - task: NodeTool@0
        inputs:
          versionSpec: "16.14.2"
        displayName: Install NodeJS.
      - script: |
          git checkout release
          git checkout develop
          git checkout $(source_branch_name)
        displayName: Unshallow commit log.
      - script: ./scripts/install
        displayName: Install dependencies.
      - script: ./scripts/check
        displayName: Run checks.
      - script: ./scripts/test
        env:
          TOX_SKIP_ENV: mutmut
        displayName: Run tests.
      - script: ./scripts/review
        condition: eq(variables['should_review'], 'true')
        env:
          DANGER_FAKE_CI: YEP
          DANGER_TEST_REPO: $(Build.Repository.Name)
          DANGER_TEST_PR: $(System.PullRequest.PullRequestNumber)
          GITHUB_TOKEN: $(DANGER_GITHUB_TOKEN)
        displayName: Review pull request.
  - job: "Deploy"
    pool:
      vmImage: "ubuntu-latest"
    dependsOn:
      - "Test"
    condition: and(succeeded(), eq(variables['should_deploy'], 'true'))
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.10"
        displayName: Install Python 3.10.
      - task: NodeTool@0
        inputs:
          versionSpec: "16.14.2"
        displayName: Install NodeJS.
      - script: |
          git config --local user.name "Artem Malyshev"
          git config --local user.email "proofit404@gmail.com"
          git checkout release
          git checkout develop
          git checkout $(source_branch_name)
        displayName: Unshallow commit log.
      - script: ./scripts/install
        displayName: Install dependencies.
      - script: ./scripts/release
        env:
          POETRY_PYPI_TOKEN_PYPI: $(SEMANTIC_RELEASE_PYPI_TOKEN)
          GITHUB_TOKEN: $(SEMANTIC_RELEASE_GITHUB_TOKEN)
          GITHUB_REPOSITORY: $(Build.Repository.Name)
        displayName: Release package.
