---
trigger:
  - master
jobs:
  - job: "Test"
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "2.7"
        displayName: Install Python 2.7.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.5"
        displayName: Install Python 3.5.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.6"
        displayName: Install Python 3.6.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.7"
        displayName: Install Python 3.7.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: Install Python 3.8.
      - task: NodeTool@0
        inputs:
          versionSpec: "12.x"
        displayName: Install NodeJS.
      - script: |
          git remote set-branches origin master
          git fetch --quiet
          git checkout master --quiet
          git checkout - --quiet
        displayName: Unshallow commit log.
      - script: pip install --upgrade tox
        displayName: Install Tox.
      - script: tox -p auto
        env:
          CI_PYTEST_FLAGS: >-
            --junitxml=junit-{envname}.xml -o junit_suite_name={envname}
            -o junit_family=xunit2 -o junit_log_passing_tests=true
          TOX_PARALLEL_NO_SPINNER: 1
        displayName: Run Tox.
      - task: PublishTestResults@2
        condition: always()
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: junit-*.xml
        displayName: Publish test results.
      - script: .tox/coverage/bin/coverage xml
        condition: always()
        displayName: Generate coverage.xml data.
      - task: PublishCodeCoverageResults@1
        condition: always()
        inputs:
          codeCoverageTool: cobertura
          summaryFileLocation: coverage.xml
        displayName: Publish coverage.xml data.
      - script: npx danger ci
        condition: eq(variables['Build.Reason'], 'PullRequest')
        env:
          DANGER_FAKE_CI: YEP
          DANGER_TEST_REPO: $(Build.Repository.Name)
          DANGER_TEST_PR: $(System.PullRequest.PullRequestNumber)
          GITHUB_TOKEN: $(DANGER_GITHUB_TOKEN)
        displayName: Review pull request.
  - job: "Deploy"
    dependsOn:
      - "Test"
    condition: |
      and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.8"
        displayName: Install Python.
      - task: NodeTool@0
        inputs:
          versionSpec: "12.x"
        displayName: Install NodeJS.
      - script: |
          git remote set-branches origin master
          git fetch --quiet
          git checkout master --quiet
        displayName: Unshallow commit log.
      - script: pip install --upgrade tox
        displayName: Install Tox.
      - script: |
          curl -sSL "https://raw.githubusercontent.com\
          /python-poetry/poetry/master/get-poetry.py" | python
          echo '##vso[task.prependpath]$(HOME)/.poetry/bin'
        displayName: Install Poetry.
      - script: |
          npm install
        displayName: Install JS dependencies.
      - script: |
          npx semantic-release
        env:
          POETRY_PYPI_TOKEN_PYPI: $(POETRY_PYPI_TOKEN_PYPI)
          GITHUB_TOKEN: $(SEMANTIC_RELEASE_GITHUB_TOKEN)
        displayName: Release package.
